// ==================================== Druid Wildshape Overhaul ====================================

new entry "WSO_WILDSHAPE_MULTICLASS_ROGUE"
type "StatusData"
data "StatusType" "BOOST"
// using "WSO_WILDSHAPE_MULTICLASS_TEMPLATE"
using "WSO_WILDSHAPE_MULTICLASS_ROGUE"
// data "StackId" "WSO_WILDSHAPE_MULTICLASS_ROGUE"
// data "Boosts" "UnlockInterrupt(WSO_Interrupt_SneakAttack);UnlockInterrupt(WSO_Interrupt_SneakAttack_Critical);IF(ClassLevelHigherOrEqualThan(2,'Rogue')):UnlockSpell(WSO_Shout_Dash_BonusAction);IF(ClassLevelHigherOrEqualThan(2,'Rogue')):UnlockSpell(WSO_Shout_Hide_BonusAction);IF(ClassLevelHigherOrEqualThan(2,'Rogue')):UnlockSpell(WSO_Shout_Disengage_BonusAction)"
data "Boosts" "IF(ClassLevelHigherOrEqualThan(2,'Rogue')):UnlockSpell(Shout_Dash_CunningAction);IF(ClassLevelHigherOrEqualThan(2,'Rogue')):UnlockSpell(Shout_Hide_BonusAction);IF(ClassLevelHigherOrEqualThan(2,'Rogue')):UnlockSpell(Shout_Disengage_CunningAction)"
// TODO: data "Passives" "Goon_Wildshape_Multiclass_Rogue" --- Crashing??? --- and not HasPassive('Smart_CunningAction',context.Source)

new entry "Goon_Wildshape_Multiclass_Rogue"
type "PassiveData"
data "Conditions" "Goon_IsWildshapeDruidPolymorph()"
data "StatsFunctorContext" "OnStatusApplied"
data "StatsFunctors" "ApplyStatus(GOON_WILDSHAPE_MULTICLASS_ROGUE,100,-1)"
data "Properties" "IsHidden"

new entry "GOON_WILDSHAPE_MULTICLASS_ROGUE"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead;DisablePortraitIndicator;ApplyToDead;IgnoreResting"
data "Passives" "Smart_CunningAction"

// new entry "WSO_Shout_Dash_BonusAction"
// type "SpellData"
// data "SpellType" "Shout"
// using "Shout_Dash_BonusAction"
// data "SpellAnimationIntentType" "Aggressive"
// data "Sheathing" "DontChange"
// data "SpellFlags" "IgnoreSilence;Stealth;Invisible;NoCameraMove;Wildshape"

// new entry "WSO_Shout_Hide_BonusAction"
// type "SpellData"
// data "SpellType" "Shout"
// using "Shout_Hide_BonusAction"
// data "SpellAnimationIntentType" "Aggressive"
// data "Sheathing" "DontChange"
// data "SpellFlags" "Stealth;ImmediateCast;AllowMoveAndCast;Invisible;UnavailableInDialogs;CombatLogSetSingleLineRoll;Wildshape"

// new entry "WSO_Shout_Disengage_BonusAction"
// type "SpellData"
// data "SpellType" "Shout"
// using "Shout_Disengage_BonusAction"
// data "SpellAnimationIntentType" "Aggressive"
// data "Sheathing" "DontChange"
// data "SpellFlags" "NoCameraMove;Wildshape"

// new entry "WSO_Interrupt_SneakAttack"
// type "InterruptData"
// using "Interrupt_SneakAttack"
// data "DisplayName" "h890d2589gc207g48f3g87fagc3f5a376df21;1"
// data "Conditions" "Self(context.Source,context.Observer) and (IsMeleeUnarmedAttack() or IsRangedUnarmedAttack()) and not IsSpellAttack() and HasDamageEffectFlag(DamageFlags.Hit) and not IsCritical() and not IsKillingBlow() and (HasDamageEffectFlag(DamageFlags.AttackAdvantage) or HasAllyWithinRange('SG_Incapacitated',1.5)) and not HasDamageEffectFlag(DamageFlags.AttackDisadvantage) and not (SpellId('Projectile_SneakAttack') or SpellId('Target_SneakAttack')) and not AnyEntityIsItem()"
// data "Properties" "IF(IsDamageTypePiercing()):DealDamage(LevelMapValue(SneakAttack), Piercing,,,0,,true,true,false,true);IF(IsDamageTypeSlashing() and not IsDamageTypePiercing()):DealDamage(LevelMapValue(SneakAttack), Slashing,,,0,,true,true,false,true);IF(IsDamageTypeBludgeoning() and not IsDamageTypePiercing() and not IsDamageTypeSlashing()):DealDamage(LevelMapValue(SneakAttack), Bludgeoning,,,0,,true,true,false,true);IF(HasPassive('MAG_ForcefulSneakAttack_Passive', context.Source)):DealDamage(1d4, Force,,,0,,true,true,false,true)"
// data "EnableCondition" "HasActionResource('SneakAttack_Charge',1,0,false,false,context.Source) and not (Tagged('MINDFLAYER') or HasStatus('SG_Disguise'))"
// data "EnableContext" "OnActionResourcesChanged;OnEquip"

// new entry "WSO_Interrupt_SneakAttack_Critical"
// type "InterruptData"
// using "Interrupt_SneakAttack"
// data "DisplayName" "h13d5905ag72aag4cc8gba38g3f97a0e90554;1"
// data "Conditions" "Self(context.Source,context.Observer) and (IsMeleeUnarmedAttack() or IsRangedUnarmedAttack()) and not IsSpellAttack() and HasDamageEffectFlag(DamageFlags.Hit) and IsCritical() and not IsKillingBlow() and (HasDamageEffectFlag(DamageFlags.AttackAdvantage) or HasAllyWithinRange('SG_Incapacitated',1.5)) and not HasDamageEffectFlag(DamageFlags.AttackDisadvantage) and not (SpellId('Projectile_SneakAttack') or SpellId('Target_SneakAttack')) and not AnyEntityIsItem()"
// data "EnableCondition" "HasActionResource('SneakAttack_Charge',1,0,false,false,context.Source) and not (Tagged('MINDFLAYER') or HasStatus('SG_Disguise'))"
// data "InterruptDefaultValue" "Enabled"

