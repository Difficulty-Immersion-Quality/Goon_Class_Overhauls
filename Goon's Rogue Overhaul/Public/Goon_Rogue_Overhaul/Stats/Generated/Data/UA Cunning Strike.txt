// ==================================== UA Sneak Attack ====================================

new entry "Interrupt_DWE_SneakAttack"
type "InterruptData"
using "Interrupt_DWE_SneakAttack"
// Sneak Attack
// data "DisplayName" "hc999d4c5ga839g45afgb385g5f648e0bb34b;1"
// Deal &lt;font color="#ffffff"&gt;[1] extra damage&lt;/font&gt; to the target.
// data "Description" "h3c64245ag90fag473cg8094g513b6a73d5e2;1"
// data "DescriptionParams" "LevelMapValue(DWE_SneakAttack)"
data "DescriptionParams" "LevelMapValue(SneakAttack)"
// data "Icon" "DWE_UACunningStrike_SneakAttack"
// data "InterruptContext" "OnCastHit"
// data "InterruptContextScope" "Self"
// data "Container" "YesNoDecision"
// data "Conditions" "DWE_SneakAttackInterruptCondition() and not IsKillingBlow()"
data "Conditions" "(Player(context.Observer) or not HasStatus('SG_Invisible',context.Observer)) and Self(context.Source,context.Observer) and not Self() and HasDamageEffectFlag(DamageFlags.Hit) and ((WieldingFinesseWeaponInSpecificHand(context.Observer,false) and IsMainHandWeaponAttack()) or (WieldingFinesseWeaponInSpecificHand(context.Observer,true) and IsOffHandAttack()) or (HasPassive('SneakAttack_LLRuffian',context.Source) and IsMonkWeaponAttack()) or IsThrowAttackRoll() or (WieldingWeapon('Ammunition', false, true, context.Observer) and IsRangedWeaponAttack()) or (Goon_IsDruidWildshape(context.Observer) and (IsMeleeAttack() or IsRangedAttack()) and (IsDamageTypePiercing() or IsDamageTypeSlashing() or IsDamageTypeBludgeoning()))) and not IsKillingBlow() and (HasDamageEffectFlag(DamageFlags.AttackAdvantage) or HasAllyWithinRange('SG_Incapacitated',1.5)) and not HasDamageEffectFlag(DamageFlags.AttackDisadvantage) and not AnyEntityIsItem() and not Goon_IsSneakAttackSpell() or (DWE_SneakAttackInterruptCondition() and not IsKillingBlow())"
// data "Properties" "IF(IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttack), MainMeleeWeaponDamageType,,,0,,true,true); IF(IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttack), OffhandMeleeWeaponDamageType,,,0,,true,true); IF(IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttack), MainRangedWeaponDamageType,,,0,,true,true); IF(IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttack), OffhandRangedWeaponDamageType,,,0,,true,true); IF(IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttack), ThrownWeaponDamageType,,,0,,true,true); IF(HasPassive('MAG_ForcefulSneakAttack_Passive', context.Source)):DealDamage(1d4, Force,Magical,,0,,true,true)"
data "Properties" "IF(IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(SneakAttack), MainMeleeWeaponDamageType,,,0,,true,true);IF(IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(SneakAttack), OffhandMeleeWeaponDamageType,,,0,,true,true);IF(IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(SneakAttack), MainRangedWeaponDamageType,,,0,,true,true);IF(IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(SneakAttack), OffhandRangedWeaponDamageType,,,0,,true,true);IF(IsThrowAttackRoll()):DealDamage(LevelMapValue(SneakAttack), ThrownWeaponDamageType,,,0,,true,true);IF(Goon_UnarmedSnek()):DealDamage(LevelMapValue(SneakAttack), Bludgeoning,,,0,,true,true);IF(Goon_UnarmedSnek_Magic()):DealDamage(LevelMapValue(SneakAttack), Bludgeoning,Magical,,0,,true,true);IF(Goon_WSSnek_Pierce()):DealDamage(LevelMapValue(SneakAttack), Piercing,,,0,,true,true);IF(Goon_WSSnek_Pierce_Magic()):DealDamage(LevelMapValue(SneakAttack), Piercing,Magical,,0,,true,true);IF(Goon_WSSnek_Slash()):DealDamage(LevelMapValue(SneakAttack), Slashing,,,0,,true,true);IF(Goon_WSSnek_Slash_Magic()):DealDamage(LevelMapValue(SneakAttack), Slashing,Magical,,0,,true,true);IF(Goon_WSSnek_Bludge()):DealDamage(LevelMapValue(SneakAttack), Bludgeoning,,,0,,true,true);IF(Goon_WSSnek_Bludge_Magic()):DealDamage(LevelMapValue(SneakAttack), Bludgeoning,Magical,,0,,true,true);IF(Goon_ForcefulSnek()):DealDamage(1d4, Force,Magical,,0,,true,true)"
// data "Cost" "SneakAttack_Charge:1"
// data "Stack" "SneakAttack"
// data "InterruptDefaultValue" "Enabled"
data "InterruptDefaultValue" "Ask;Enabled"
// data "EnableContext" "OnActionResourcesChanged;OnEquip;OnStatusApplied;OnStatusRemoved"
// data "EnableCondition" "HasActionResource('SneakAttack_Charge',1,0,false,false,context.Source) and (WieldingFinesseWeaponInSpecificHand(context.Source, false) or WieldingFinesseWeaponInSpecificHand(context.Source, true) or WieldingWeapon('Ammunition', false, true, context.Source) or SpellTypeIs(SpellType.Throw)) and not HasStatus('SG_Polymorph_BeastShape')"
data "EnableCondition" "HasActionResource('SneakAttack_Charge',1,0,false,false,context.Source) and (((WieldingFinesseWeaponInSpecificHand(context.Source, false) or WieldingFinesseWeaponInSpecificHand(context.Source, true) or WieldingWeapon('Ammunition', false, true, context.Source) or (HasPassive('SneakAttack_LLRuffian',context.Source)) or SpellTypeIs(SpellType.Throw)) and (not HasStatus('SG_Polymorph') or Goon_IsNonHostilePolymorphStatus())) or Goon_IsRestrictedPolymorphStatus() and not Goon_IsMyrmidonDruidPolymorph())"
// data "InterruptFlags" "InterruptWhileInvisible"

// ==================================== UA Sneak Attack - Substracted variants
// TODO: Unarmed melee damage (both wildshape and humanoid) does not work when using cunning strikes, or Cunning Strike: Poison at the very least. Can't figure that rn, adjusted conditions to exclude them.

new entry "Interrupt_DWE_CunningStrike_Less1"
type "InterruptData"
// using "Interrupt_DWE_SneakAttack"
using "Interrupt_DWE_CunningStrike_Less1"
// data "DescriptionParams" "LevelMapValue(DWE_SneakAttackLess1); Distance(9)"
// data "Properties" "IF(IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), MainMeleeWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), OffhandMeleeWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), MainRangedWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), OffhandRangedWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), ThrownWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), MainMeleeWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), OffhandMeleeWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), MainRangedWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), OffhandRangedWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), ThrownWeaponDamageType,,,0,,true,true); IF(HasPassive('MAG_ForcefulSneakAttack_Passive', context.Source)):DealDamage(1d4, Force,Magical,,0,,true,true)"
data "Properties" "IF(IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), MainMeleeWeaponDamageType,,,0,,true,true);IF(IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), OffhandMeleeWeaponDamageType,,,0,,true,true);IF(IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), MainRangedWeaponDamageType,,,0,,true,true);IF(IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), OffhandRangedWeaponDamageType,,,0,,true,true);IF(IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), ThrownWeaponDamageType,,,0,,true,true);IF(IsCritical() and Goon_UnarmedSnek()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), Bludgeoning,,,0,,true,true);IF(IsCritical() and Goon_UnarmedSnek_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), Bludgeoning,Magical,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Pierce()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), Piercing,,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Pierce_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), Piercing,Magical,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Slash()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), Slashing,,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Slash_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), Slashing,Magical,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Bludge()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), Bludgeoning,,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Bludge_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1) + ResourceRoll(DWE_SneakAttack,1), Bludgeoning,Magical,,0,,true,true);IF(not IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), MainMeleeWeaponDamageType,,,0,,true,true);IF(not IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), OffhandMeleeWeaponDamageType,,,0,,true,true);IF(not IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), MainRangedWeaponDamageType,,,0,,true,true);IF(not IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), OffhandRangedWeaponDamageType,,,0,,true,true);IF(not IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), ThrownWeaponDamageType,,,0,,true,true);IF(not IsCritical() and Goon_UnarmedSnek()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Bludgeoning,,,0,,true,true);IF(not IsCritical() and Goon_UnarmedSnek_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Bludgeoning,Magical,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Pierce()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Piercing,,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Pierce_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Piercing,Magical,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Slash()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Slashing,,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Slash_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Slashing,Magical,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Bludge()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Bludgeoning,,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Bludge_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Bludgeoning,Magical,,0,,true,true);IF(Goon_ForcefulSnek()):DealDamage(1d4, Force,Magical,,0,,true,true)"
// data "InterruptDefaultValue" "Enabled;Ask"

new entry "Interrupt_DWE_CunningStrike_Less2"
type "InterruptData"
// using "Interrupt_DWE_CunningStrike_Less1"
using "Interrupt_DWE_CunningStrike_Less2"
// data "DescriptionParams" "LevelMapValue(DWE_SneakAttackLess2); Distance(9)"
// data "Properties" "IF(IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), MainMeleeWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), OffhandMeleeWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), MainRangedWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), OffhandRangedWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), ThrownWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2), MainMeleeWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2), OffhandMeleeWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2), MainRangedWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2), OffhandRangedWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), ThrownWeaponDamageType,,,0,,true,true); IF(HasPassive('MAG_ForcefulSneakAttack_Passive', context.Source)):DealDamage(1d4, Force,Magical,,0,,true,true)"
data "Properties" "IF(IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), MainMeleeWeaponDamageType,,,0,,true,true);IF(IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), OffhandMeleeWeaponDamageType,,,0,,true,true);IF(IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), MainRangedWeaponDamageType,,,0,,true,true);IF(IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess1), OffhandRangedWeaponDamageType,,,0,,true,true);IF(IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), ThrownWeaponDamageType,,,0,,true,true);IF(IsCritical() and Goon_UnarmedSnek()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Bludgeoning,,,0,,true,true);IF(IsCritical() and Goon_UnarmedSnek_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Bludgeoning,Magical,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Pierce()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Piercing,,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Pierce_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Piercing,Magical,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Slash()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Slashing,,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Slash_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Slashing,Magical,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Bludge()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Bludgeoning,,,0,,true,true);IF(IsCritical() and Goon_WSSnek_Bludge_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess1), Bludgeoning,Magical,,0,,true,true);IF(not IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2), MainMeleeWeaponDamageType,,,0,,true,true);IF(not IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2), OffhandMeleeWeaponDamageType,,,0,,true,true);IF(not IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2), MainRangedWeaponDamageType,,,0,,true,true);IF(not IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2), OffhandRangedWeaponDamageType,,,0,,true,true);IF(not IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), ThrownWeaponDamageType,,,0,,true,true);IF(not IsCritical() and Goon_UnarmedSnek()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), Bludgeoning,,,0,,true,true);IF(not IsCritical() and Goon_UnarmedSnek_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), Bludgeoning,Magical,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Pierce()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), Piercing,,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Pierce_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), Piercing,Magical,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Slash()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), Slashing,,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Slash_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), Slashing,Magical,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Bludge()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), Bludgeoning,,,0,,true,true);IF(not IsCritical() and Goon_WSSnek_Bludge_Magic()):DealDamage(LevelMapValue(DWE_SneakAttackLess2), Bludgeoning,Magical,,0,,true,true);IF(Goon_ForcefulSnek()):DealDamage(1d4, Force,Magical,,0,,true,true)"

new entry "Interrupt_DWE_CunningStrike_Less3"
type "InterruptData"
// using "Interrupt_DWE_CunningStrike_Less1"
using "Interrupt_DWE_CunningStrike_Less3"
// data "DescriptionParams" "LevelMapValue(DWE_SneakAttackLess3); Distance(9)"
// data "Properties" "IF(IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2) + ResourceRoll(DWE_SneakAttack,1), MainMeleeWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2) + ResourceRoll(DWE_SneakAttack,1), OffhandMeleeWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2) + ResourceRoll(DWE_SneakAttack,1), MainRangedWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess2) + ResourceRoll(DWE_SneakAttack,1), OffhandRangedWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess2) + ResourceRoll(DWE_SneakAttack,1), ThrownWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess3), MainMeleeWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess3), OffhandMeleeWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess3), MainRangedWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess3), OffhandRangedWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess3), ThrownWeaponDamageType,,,0,,true,true); IF(HasPassive('MAG_ForcefulSneakAttack_Passive', context.Source)):DealDamage(1d4, Force,Magical,,0,,true,true)"

new entry "Interrupt_DWE_CunningStrike_Less6"
type "InterruptData"
// using "Interrupt_DWE_CunningStrike_Less1"
using "Interrupt_DWE_CunningStrike_Less6"
// data "DescriptionParams" "LevelMapValue(DWE_SneakAttackLess6); Distance(9)"
// data "Properties" "IF(IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess3), MainMeleeWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess3), OffhandMeleeWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess3), MainRangedWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess3), OffhandRangedWeaponDamageType,,,0,,true,true); IF(IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess3), ThrownWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess6), MainMeleeWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess6), OffhandMeleeWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess6), MainRangedWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(DWE_SneakAttackLess6), OffhandRangedWeaponDamageType,,,0,,true,true); IF(not IsCritical() and IsThrowAttackRoll()):DealDamage(LevelMapValue(DWE_SneakAttackLess6), ThrownWeaponDamageType,,,0,,true,true); IF(HasPassive('MAG_ForcefulSneakAttack_Passive', context.Source)):DealDamage(1d4, Force,Magical,,0,,true,true)"

// ==================================== UA Cunning Strikes ====================================

new entry "DWE_CunningStrike"
type "PassiveData"
using "DWE_CunningStrike"
// data "DisplayName" "hdea0da43g04d4g44a9g944egc2d42d51017d;1"
// data "Description" "h407256d0gba44g44c9gad33g8d2ac2bbde88;1"
// data "Icon" "DWE_UACunningStrike_Poison"
// data "Properties" "Highlighted"
// data "Boosts" "ActionResource(DWE_SneakAttack,1,0,d6); UnlockInterrupt(Interrupt_DWE_CunningStrike_Disarm); UnlockInterrupt(Interrupt_DWE_CunningStrike_Poison); UnlockInterrupt(Interrupt_DWE_CunningStrike_Trip); UnlockInterrupt(Interrupt_DWE_CunningStrike_Withdraw)"
data "Boosts" "ActionResource(DWE_SneakAttack,1,0,d6); UnlockInterrupt(Interrupt_DWE_CunningStrike_Disarm); UnlockInterrupt(Goon_Interrupt_DWE_CunningStrike_Poison); UnlockInterrupt(Interrupt_DWE_CunningStrike_Trip); UnlockInterrupt(Interrupt_DWE_CunningStrike_Withdraw)"

// new entry "DWE_DeviousStrikes"
// type "PassiveData"
// data "DisplayName" "h7ddd5cddg973cg42a1ga2degf95d86464be1;1"
// data "Description" "h3f7241f6gfb96g45edgba83gbe0e6c9384c3;1"
// data "Icon" "DWE_UACunningStrike_KnockOut"
// data "Properties" "Highlighted"
// data "Boosts" "ActionResource(DWE_SneakAttack,1,0,d6); UnlockInterrupt(Interrupt_DWE_CunningStrike_Daze); UnlockInterrupt(Interrupt_DWE_CunningStrike_KnockOut); UnlockInterrupt(Interrupt_DWE_CunningStrike_Trip); UnlockInterrupt(Interrupt_DWE_CunningStrike_Obscure)"

new entry "Interrupt_DWE_CunningStrike_Disarm"
type "InterruptData"
// using "Interrupt_DWE_CunningStrike_Less1"
using "Interrupt_DWE_CunningStrike_Disarm"
// Disarm
// data "DisplayName" "hd886dfbcgfeb1g41acg9f92gccdf00084da7;1"
// Deal &lt;font color="#ffffff"&gt;[1] extra damage&lt;/font&gt; and attempt to &lt;LSTag Type="Status" Tooltip="DISARM"&gt;Disarm&lt;/LSTag&gt; the target.
// data "Description" "hd3569f73g41a8g4ff1g9411g5497f807d096;1"
// data "Icon" "DWE_UACunningStrike_Disarm"
// data "Conditions" "DWE_SneakAttackInterruptCondition() and not IsKillingBlow() and DWE_HasWeaponInAnyHand()"
data "Conditions" "((Player(context.Observer) or not HasStatus('SG_Invisible',context.Observer)) and Self(context.Source,context.Observer) and not Self() and HasDamageEffectFlag(DamageFlags.Hit) and ((WieldingFinesseWeaponInSpecificHand(context.Observer,false) and IsMainHandWeaponAttack()) or (WieldingFinesseWeaponInSpecificHand(context.Observer,true) and IsOffHandAttack()) or (HasPassive('SneakAttack_LLRuffian',context.Source) and IsMonkWeaponAttack()) or IsThrowAttackRoll() or (WieldingWeapon('Ammunition', false, true, context.Observer) and IsRangedWeaponAttack()) or (Goon_IsDruidWildshape(context.Observer) and (IsMeleeAttack() or IsRangedAttack()) and (IsDamageTypePiercing() or IsDamageTypeSlashing() or IsDamageTypeBludgeoning()))) and not IsKillingBlow() and (HasDamageEffectFlag(DamageFlags.AttackAdvantage) or HasAllyWithinRange('SG_Incapacitated',1.5)) and not HasDamageEffectFlag(DamageFlags.AttackDisadvantage) and not AnyEntityIsItem() and not Goon_IsSneakAttackSpell() and DWE_HasWeaponInAnyHand() or (DWE_SneakAttackInterruptCondition() and not IsKillingBlow() and DWE_HasWeaponInAnyHand())) and not IsAttackType(AttackType.MeleeUnarmedAttack)"
// data "Success" "ApplyStatus(OBSERVER_TARGET,DWE_CUNNING_STRIKE_APPLY_DISARM,100,0)"
// data "TooltipAttackSave" "Dexterity"
// data "InterruptDefaultValue" "Ask"
data "InterruptDefaultValue" "Enabled;Ask"

// TODO: I cannot fathom why this won't accept my conditions, gotta be something overwriting even in a minimal environment?!
// new entry "Interrupt_DWE_CunningStrike_Poison"
// type "InterruptData"
// using "Interrupt_DWE_CunningStrike_Less1"
// Poison
// data "DisplayName" "h05c6f6e1g8880g47e0g8528g7f386b4d98b0;1"
// Deal &lt;font color="#ffffff"&gt;[1] extra damage&lt;/font&gt; and attempt to &lt;LSTag Type="Status" Tooltip="DWE_CUNNING_STRIKE_POISON"&gt;Poison&lt;/LSTag&gt; the target for up to 10 turns.
// data "Description" "ha6733035g894bg49e4g9517g9d46404ddefc;1"
// data "Icon" "DWE_UACunningStrike_Poison"
// data "Success" "ApplyStatus(OBSERVER_TARGET,DWE_CUNNING_STRIKE_APPLY_POISON,100,1)"
// data "TooltipAttackSave" "Constitution"

new entry "Goon_Interrupt_DWE_CunningStrike_Poison"
type "InterruptData"
using "Interrupt_DWE_CunningStrike_Less1"
// Poison
data "DisplayName" "h05c6f6e1g8880g47e0g8528g7f386b4d98b0;1"
// Deal &lt;font color="#ffffff"&gt;[1] extra damage&lt;/font&gt; and attempt to &lt;LSTag Type="Status" Tooltip="DWE_CUNNING_STRIKE_POISON"&gt;Poison&lt;/LSTag&gt; the target for up to 10 turns.
data "Description" "ha6733035g894bg49e4g9517g9d46404ddefc;1"
data "Icon" "DWE_UACunningStrike_Poison"
data "Success" "ApplyStatus(OBSERVER_TARGET,DWE_CUNNING_STRIKE_APPLY_POISON,100,1)"
data "Conditions" "((Player(context.Observer) or not HasStatus('SG_Invisible',context.Observer)) and Self(context.Source,context.Observer) and not Self() and HasDamageEffectFlag(DamageFlags.Hit) and ((WieldingFinesseWeaponInSpecificHand(context.Observer,false) and IsMainHandWeaponAttack()) or (WieldingFinesseWeaponInSpecificHand(context.Observer,true) and IsOffHandAttack()) or (HasPassive('SneakAttack_LLRuffian',context.Source) and IsMonkWeaponAttack()) or IsThrowAttackRoll() or (WieldingWeapon('Ammunition', false, true, context.Observer) and IsRangedWeaponAttack()) or (Goon_IsDruidWildshape(context.Observer) and (IsMeleeAttack() or IsRangedAttack()) and (IsDamageTypePiercing() or IsDamageTypeSlashing() or IsDamageTypeBludgeoning()))) and not IsKillingBlow() and (HasDamageEffectFlag(DamageFlags.AttackAdvantage) or HasAllyWithinRange('SG_Incapacitated',1.5)) and not HasDamageEffectFlag(DamageFlags.AttackDisadvantage) and not AnyEntityIsItem() and not Goon_IsSneakAttackSpell() or (DWE_SneakAttackInterruptCondition() and not IsKillingBlow())) and not IsAttackType(AttackType.MeleeUnarmedAttack)"
data "TooltipAttackSave" "Constitution"

new entry "Interrupt_DWE_CunningStrike_Trip"
type "InterruptData"
// using "Interrupt_DWE_CunningStrike_Less1"
using "Interrupt_DWE_CunningStrike_Trip"
// Trip
// data "DisplayName" "hfa8f716bg6d79g4f6cg8b58ga9078f3ae27e;1"
// Deal &lt;font color="#ffffff"&gt;[1] extra damage&lt;/font&gt; and attempt to knock the target &lt;LSTag Type="Status" Tooltip="PRONE"&gt;Prone&lt;/LSTag&gt;.
// data "Description" "hd3d27832g9819g45eagb2cfg5d95ab1ad57a;1"
// data "Icon" "DWE_UACunningStrike_Trip"
// data "Conditions" "DWE_SneakAttackInterruptCondition() and not IsKillingBlow() and TargetSizeEqualOrSmaller(Size.Large) and not HasStatus('SG_Prone')"
data "Conditions" "((Player(context.Observer) or not HasStatus('SG_Invisible',context.Observer)) and Self(context.Source,context.Observer) and not Self() and HasDamageEffectFlag(DamageFlags.Hit) and ((WieldingFinesseWeaponInSpecificHand(context.Observer,false) and IsMainHandWeaponAttack()) or (WieldingFinesseWeaponInSpecificHand(context.Observer,true) and IsOffHandAttack()) or (HasPassive('SneakAttack_LLRuffian',context.Source) and IsMonkWeaponAttack()) or IsThrowAttackRoll() or (WieldingWeapon('Ammunition', false, true, context.Observer) and IsRangedWeaponAttack()) or (Goon_IsDruidWildshape(context.Observer) and (IsMeleeAttack() or IsRangedAttack()) and (IsDamageTypePiercing() or IsDamageTypeSlashing() or IsDamageTypeBludgeoning()))) and not IsKillingBlow() and (HasDamageEffectFlag(DamageFlags.AttackAdvantage) or HasAllyWithinRange('SG_Incapacitated',1.5)) and not HasDamageEffectFlag(DamageFlags.AttackDisadvantage) and not AnyEntityIsItem() and not Goon_IsSneakAttackSpell() and TargetSizeEqualOrSmaller(Size.Large) and not HasStatus('SG_Prone') or (DWE_SneakAttackInterruptCondition() and not IsKillingBlow() and TargetSizeEqualOrSmaller(Size.Large) and not HasStatus('SG_Prone')) and not IsAttackType(AttackType.MeleeUnarmedAttack))" 
// data "Success" "ApplyStatus(OBSERVER_TARGET,DWE_CUNNING_STRIKE_APPLY_TRIP,100,0)"
// data "TooltipAttackSave" "Dexterity"

new entry "Interrupt_DWE_CunningStrike_Withdraw"
type "InterruptData"
// using "Interrupt_DWE_CunningStrike_Less1"
using "Interrupt_DWE_CunningStrike_Withdraw"
// Withdraw
// data "DisplayName" "hb68edf01g9a0dg4c35gb06cg8ab2585e51c8;1"
// Deal &lt;font color="#ffffff"&gt;[1] extra damage&lt;/font&gt; and then immediately move up to half your &lt;LSTag Tooltip="MovementSpeed"&gt;Movement Speed&lt;/LSTag&gt; without provoking &lt;LSTag Tooltip="OpportunityAttack"&gt;Opportunity Attacks&lt;/LSTag&gt;.
// data "Description" "h66c557adgdaf0g429fg9515gc13c98462643;1"
// data "Icon" "DWE_UACunningStrike_Withdraw"
// data "Conditions" "DWE_SneakAttackInterruptCondition() and HasStatus('DWE_SNEAK_ATTACK_OWN_TURN',context.Source)"
data "Conditions" "((Player(context.Observer) or not HasStatus('SG_Invisible',context.Observer)) and Self(context.Source,context.Observer) and not Self() and HasDamageEffectFlag(DamageFlags.Hit) and ((WieldingFinesseWeaponInSpecificHand(context.Observer,false) and IsMainHandWeaponAttack()) or (WieldingFinesseWeaponInSpecificHand(context.Observer,true) and IsOffHandAttack()) or (HasPassive('SneakAttack_LLRuffian',context.Source) and IsMonkWeaponAttack()) or IsThrowAttackRoll() or (WieldingWeapon('Ammunition', false, true, context.Observer) and IsRangedWeaponAttack()) or (Goon_IsDruidWildshape(context.Observer) and (IsMeleeAttack() or IsRangedAttack()) and (IsDamageTypePiercing() or IsDamageTypeSlashing() or IsDamageTypeBludgeoning()))) and not IsKillingBlow() and (HasDamageEffectFlag(DamageFlags.AttackAdvantage) or HasAllyWithinRange('SG_Incapacitated',1.5)) and not HasDamageEffectFlag(DamageFlags.AttackDisadvantage) and not AnyEntityIsItem() and not Goon_IsSneakAttackSpell() and HasStatus('DWE_SNEAK_ATTACK_OWN_TURN',context.Source) or (DWE_SneakAttackInterruptCondition() and not IsKillingBlow() and HasStatus('DWE_SNEAK_ATTACK_OWN_TURN',context.Source)) and not IsAttackType(AttackType.MeleeUnarmedAttack))" 
// data "Success" "ApplyStatus(OBSERVER_OBSERVER,DWE_CUNNING_STRIKE_WITHDRAW,100,1)"

// new entry "Interrupt_DWE_CunningStrike_Daze"
// using "Interrupt_DWE_CunningStrike_Less2"
// Daze
// data "DisplayName" "hac14406eg3a60g4931ga78ag9bb30a0cdfca;1"
// Deal &lt;font color="#ffffff"&gt;[1] extra damage&lt;/font&gt; and attempt to &lt;LSTag Type="Status" Tooltip="DAZED"&gt;Daze&lt;/LSTag&gt; the target.
// data "Description" "h296c5cbfg003cg4839gb7bbg07d30290b8b0;1"
// data "Icon" "statIcons_Dazed"
// data "Success" "ApplyStatus(OBSERVER_TARGET,DWE_CUNNING_STRIKE_APPLY_DAZE,100,0)"
// data "TooltipAttackSave" "Constitution"

// new entry "Interrupt_DWE_CunningStrike_KnockOut"
// using "Interrupt_DWE_CunningStrike_Less6"
// Knock Out
// data "DisplayName" "h44327594g358eg42b9gba6ag79d0898061db;1"
// Deal &lt;font color="#ffffff"&gt;[1] extra damage&lt;/font&gt; and attempt to &lt;LSTag Type="Status" Tooltip="DWE_CUNNING_STRIKE_KNOCKED_OUT"&gt;Knock Out&lt;/LSTag&gt; the target.
// data "Description" "he82312d9g258cg462ag8447g45503ce13079;1"
// data "Icon" "DWE_UACunningStrike_KnockOut"
// data "Success" "ApplyStatus(OBSERVER_TARGET,DWE_CUNNING_STRIKE_APPLY_KNOCKOUT,100,0)"
// data "TooltipAttackSave" "Constitution"

// new entry "Interrupt_DWE_CunningStrike_Obscure"
// using "Interrupt_DWE_CunningStrike_Less3"
// Obscure
// data "DisplayName" "he74b41ffgf36ag4bf6g8126g6cee3f6814b2;1"
// Deal &lt;font color="#ffffff"&gt;[1] extra damage&lt;/font&gt; and attempt to &lt;LSTag Type="Status" Tooltip="BLINDED"&gt;Blind&lt;/LSTag&gt; the target.
// data "Description" "h128a9906ge29cg46c7ga3aag28ffe7d3c5cb;1"
// data "Icon" "Status_Blinded"
// data "Success" "ApplyStatus(OBSERVER_TARGET,DWE_CUNNING_STRIKE_APPLY_OBSCURE,100,0)"
// data "TooltipAttackSave" "Dexterity"
